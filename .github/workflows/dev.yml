name: Front - Dev CI/CD

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Run Angular tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        env:
          CI: true

      - name: Build Angular project
        run: npm run build -- --configuration=production

      - name: Verificar arquivos gerados
        run: |
          ls -la dist
          ls -la dist/front-projetoum

      - name: Configurar chave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCP_VM_HOST }} >> ~/.ssh/known_hosts

      - name: Criar diretório na VM (se necessário)
        run: |
          ssh ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_HOST }} "mkdir -p /home/${{ secrets.GCP_VM_USER }}/frontend"

      - name: Enviar arquivos para a VM
        run: |
          scp -r dist/front-projetoum ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_HOST }}:/home/${{ secrets.GCP_VM_USER }}/frontend
          scp Dockerfile nginx.conf package.json package-lock.json ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_HOST }}:/home/${{ secrets.GCP_VM_USER }}/frontend/

      - name: Build e restart do container na VM
        run: |
          ssh ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_HOST }} << 'EOF'
            cd ~/frontend
            docker stop frontangularmensal7 || true
            docker rm frontangularmensal7 || true
            docker build --no-cache -t frontend-mensal .
            docker run -d --name frontangularmensal7 -p 80:80 -p 443:443 -v /etc/letsencrypt/live/api-mensal.shop/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro -v /etc/letsencrypt/live/api-mensal.shop/privkey.pem:/etc/nginx/ssl/privkey.pem:ro frontend-mensal
          EOF
